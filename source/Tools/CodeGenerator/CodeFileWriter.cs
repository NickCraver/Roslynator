// Copyright (c) Josef Pihrt. All rights reserved. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

using System;
using System.IO;
using System.Text;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using static Microsoft.CodeAnalysis.CSharp.SyntaxFactory;

namespace CodeGenerator
{
    public class CodeFileWriter
    {
        public const string AutoGeneratedTag = "<auto-generated>";

        public string CodeFileHeader { get; set; } = "// Copyright (c) Josef Pihrt. All rights reserved. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.";

        public void SaveCode(string path, CompilationUnitSyntax compilationUnit, bool normalizeWhitespace = true)
        {
            if (!File.Exists(path))
            {
                Console.WriteLine($"file not found '{path}'");
                return;
            }

            if (normalizeWhitespace)
                compilationUnit = compilationUnit.NormalizeWhitespace();

            compilationUnit = AddHeader(compilationUnit);

            string s = compilationUnit.ToFullString();

            if (!string.Equals(s, File.ReadAllText(path, Encoding.UTF8), StringComparison.Ordinal))
            {
                File.WriteAllText(path, s, Encoding.UTF8);
                Console.WriteLine($"file saved: '{path}'");
            }
            else
            {
                Console.WriteLine($"file unchanged: '{path}'");
            }
        }

        private CompilationUnitSyntax AddHeader(CompilationUnitSyntax compilationUnit)
        {
            return compilationUnit
                .WithLeadingTrivia(
                    TriviaList(
                        Comment(CodeFileHeader),
                        EndOfLine("\r\n"),
                        EndOfLine("\r\n"),
                        Comment("// " + AutoGeneratedTag),
                        EndOfLine("\r\n"),
                        EndOfLine("\r\n")));
        }
    }
}
